version: 2.1

aliases:
  - &docker
    - image: cimg/node:15.1
  - &restore_yarn_cache
    restore_cache:
      name: Restore Yarn Cache
      key: v1-node-{{ checksum "yarn.lock" }}-yarn
  - &restore_node_modules_cache
    restore_cache:
      name: Restore Node Modules Cache
      key: v1-node--{{ .Branch }}-{{ checksum "yarn.lock" }}-node_modules

orbs:
  # aws-ecr: circleci/aws-ecr@7.0.0
  # aws-ecs: circleci/aws-ecs@2.2.1

jobs:
  setup:
    docker: *docker
    steps:
      - checkout
      - *restore_yarn_cache
      - run: yarn --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          name: Save yarn cache
          key: v1-node-{{ checksum "yarn.lock" }}-yarn
          paths:
            - ~/.cache/yarn
      - save_cache:
          name: Save node_modules cache
          key: v1-node--{{ .Branch }}-{{ checksum "yarn.lock" }}-node_modules
          paths:
            - node_modules

  build:
    docker: *docker
    steps:
      - checkout
      - *restore_node_modules_cache
      - run: yarn build

  lint:
    docker: *docker
    steps:
      - checkout
      - *restore_node_modules_cache
      - run: yarn lint
  
  test:
    docker: *docker
    steps: 
      - checkout
      - *restore_node_modules_cache
      - run: yarn test
      - store_test_results:
          path: ./reports/junit/
  
  test-coverage:
    docker: *docker
    steps:
      - checkout
      - *restore_node_modules_cache
      - run: yarn test:coverage
      - store_artifacts:
          path: ./coverage

  shell-test:
    docker: *docker
    steps:
        - checkout
        - run:
            name: Run Shell Script File
            command: |
              cd ./scripts/demo
              chmod 755 helloworld.sh
              ./helloworld.sh

workflows:
  build_and_test:
    jobs:
      - setup
      - build:
          requires:
            - setup
          filters:
            branches:
                only:
                  - main
      - shell-test:
          requires:
            - build
      - lint:
          requires: 
            - build
      - test:
          requires:
            - lint
      - test-coverage:
          requires:
            - lint
      # - aws-ecr/build-and-push-image:
      #     context: 
      #       - AWS
      #       - ECR
      #     repo: $ECR_REPO
      #     tag: "latest,${CIRCLE_SHA1}"
      #     path: .
      #     remote-docker-layer-caching: true
      #     requires:
      #       - test
      #       - test-coverage
      #     filters:
      #       branches:
      #         only:
      #           - main
      # - aws-ecs/deploy-service-update:
      #     context: 
      #       - AWS
      #       - ECS
      #     family: $ECS_FAMILY
      #     cluster-name:  $ECS_CLUSTER_NAME
      #     service-name: $ECS_SERVICE_NAME
      #     container-image-name-updates: "container=$ECS_CONTAINER,tag=${CIRCLE_SHA1}"
      #     requires:
      #       - aws-ecr/build-and-push-image
      #     filters:
      #       branches:
      #         only:
      #           - main